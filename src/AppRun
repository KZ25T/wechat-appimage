#!/bin/bash
export PATH="/opt/wechat-beta:$PATH"
export LD_LIBRARY_PATH="/opt/wechat-beta:/usr/lib"
export LANG=zh_CN.UTF-8
EXEC="wechat"
if [ $# -eq 1 ]; then
	if [ "$1" = "help"  -o "$1" = "--help"  ]; then
		echo "Run wechat without options"
		echo "Options:"
		echo "    --debug                   return a shell but not wechat"
		echo "    --kill                    to kill wechat process"
		echo "    --update                  to check update"
		echo "    --install (root required) to install desktop file"
		echo "    --remove  (root required) to remove installation above"
		exit $?
	fi
	if [ "$1" = "--debug" ]; then
		EXEC="bash"
	fi
	if [ "$1" = "--kill"  ]; then
		kill $(ps -e | grep wechat | grep -v "wechat-" | awk '{print $1}')
		exit $?
	fi
	if [ "$1" = "--install" ]; then
		cp $APPIMAGE /usr/bin/wechat
		cp $APPDIR/wechat.desktop /usr/share/applications
		cp $APPDIR/wechat.png /usr/share/icons/hicolor/256x256/apps
		sed -i 's#Icon=wechat#Icon=/usr/share/icons/hicolor/256x256/apps/wechat.png#g' /usr/share/applications/wechat.desktop
		exit $?
	fi
	if [ "$1" = "--remove" ]; then
		rm /usr/share/applications/wechat.desktop
		rm /usr/share/icons/hicolor/256x256/apps/wechat.png
		rm $APPIMAGE
		exit $?
	fi
	if [ "$1" = "--update" ]; then
		echo "please go to https://github.com/KZ25T/wechat-appimage/releases to check update"
		exit $?
	fi
fi
# wechat-beta only support xcb
BWRAP_ENV_APPEND="--setenv QT_QPA_PLATFORM xcb "
[ -z ${QT_IM_MODULE} ]   && BWRAP_ENV_APPEND+="--setenv QT_IM_MODULE fcitx "
[ -z ${GTK_USE_PORTAL} ] && BWRAP_ENV_APPEND+="--setenv GTK_USE_PORTAL 1 "
# append user config file
BWRAP_FILE_APPEND=""
if [ -e ~/.config/user-dirs.dirs ]; then
	source ~/.config/user-dirs.dirs
	WECHAT_CFG_DIR=${XDG_DOCUMENTS_DIR}/xwechat_files
	mkdir -p ${WECHAT_CFG_DIR}
	BWRAP_FILE_APPEND+="--bind ${XDG_DESKTOP_DIR}   ${XDG_DESKTOP_DIR}   "
	BWRAP_FILE_APPEND+="--bind ${XDG_DOCUMENTS_DIR} ${XDG_DOCUMENTS_DIR} "
	BWRAP_FILE_APPEND+="--bind ${XDG_DOWNLOAD_DIR}  ${XDG_DOWNLOAD_DIR}  "
	BWRAP_FILE_APPEND+="--bind ${WECHAT_CFG_DIR}    $HOME/xwechat_files  "
else
	echo ">>>>> WARNING: no xdg config file (~/.config/user-dirs.dirs) found."
	echo ">>>>> YOU SHOULD CONFIG IT but now wechat will try continue to run."
fi
FONT1=$HOME/.cache/fontconfig
FONT2=$HOME/.config/fontconfig
XAUTH=$HOME/.Xauthority
[ -e ${FONT1} ] && BWRAP_FILE_APPEND+="--ro-bind ${FONT1} ${FONT1} "
[ -e ${FONT2} ] && BWRAP_FILE_APPEND+="--ro-bind ${FONT2} ${FONT2} "
# append runtime lib file
[ -e /etc/os-release ] && source /etc/os-release
LIBBIND=""
if [[ "$ID" == "debian" || "$ID_LIKE" == "debian" ]]; then
    # this is debian derived.
    LIBBIND="--tmpfs /usr/lib"
    BWRAP_FILE_APPEND+="--ro-bind /usr/lib/locale           /usr/lib/locale           "
    BWRAP_FILE_APPEND+="--ro-bind /usr/lib/x86_64-linux-gnu /usr/lib/x86_64-linux-gnu "
    BWRAP_FILE_APPEND+="--ro-bind /usr/lib/udev             /usr/lib/udev             "
elif [[ "$ID" == "fedora" || -e /usr/bin/rpm ]]; then
    # this is RHEL derived.
    LIBBIND="--tmpfs /usr/lib"
    BWRAP_FILE_APPEND+="--ro-bind /usr/lib/locale /usr/lib/locale "
    BWRAP_FILE_APPEND+="--ro-bind /usr/lib/udev   /usr/lib/udev   "
    [ -e /usr/lib64/libbz2.so.1 ] && BWRAP_FILE_APPEND+="--ro-bind /usr/lib64/libbz2.so.1 /usr/lib/libbz2.so.1.0 "
else
    echo "Not a Debian distribution."
    LIBBIND="--bind /usr/lib /usr/lib"
    [ -e ${XAUTH} ] && BWRAP_FILE_APPEND+="--ro-bind ${XAUTH} ${XAUTH} "
fi
# append system config file
ETCFILES=(/etc/alternatives /etc/fonts /etc/hostname /etc/hosts /etc/ld.so.cache \
          /etc/localtime    /etc/machine-id     /etc/passwd     /etc/resolv.conf)
for ETCFILE in "${ETCFILES[@]}"; do
    [ -e ${ETCFILE} ] && BWRAP_FILE_APPEND+="--ro-bind ${ETCFILE} ${ETCFILE} "
done     
# append video devices
BWRAP_DEVICE_APPEND=""
[ -e /dev/snd ] && BWRAP_DEVICE_APPEND="--dev-bind /dev/snd /dev/snd"
[ -e /dev/video0 ] && for video_device in /dev/video*; do
    BWRAP_DEVICE_APPEND+=" --dev-bind $video_device $video_device"
done
# run bubblewrap env
mkdir -p $HOME/.xwechat
bwrap --die-with-parent                                                   \
	--ro-bind  /                                /                         \
	--tmpfs    /sys  --tmpfs /home              --tmpfs /etc --proc /proc \
	--tmpfs    /run  ${LIBBIND}                 --tmpfs /tmp --dev  /dev  \
	--ro-bind  $APPDIR/opt                      /opt                      \
	--ro-bind  $APPDIR/etc/os-release           /etc/os-release           \
	--ro-bind  $APPDIR/etc/lsb-release          /etc/lsb-release          \
	--ro-bind  $APPDIR/etc/.kyact               /etc/.kyact               \
	--ro-bind  $APPDIR/etc/LICENSE              /etc/LICENSE              \
	--ro-bind  $APPDIR/usr/lib/libactivation.so /usr/lib/libactivation.so \
	--ro-bind  /run/user/$UID                   /run/user/$UID            \
	--bind     $HOME/.xwechat                   $HOME/.xwechat            \
	${BWRAP_FILE_APPEND} ${BWRAP_ENV_APPEND} ${BWRAP_DEVICE_APPEND}       \
	${EXEC}
# refer: https://blog.lilydjwg.me/2021/8/12/using-bwrap.215869.html
# refer: https://github.com/lfift/wechat-beta-bwrap/blob/main/wechat.sh
